{"version":3,"sources":["Contexts/stockDataContext.js","Components/navbar.js","Components/recentUpdatesTable.js","Components/listItems.js","Components/firstPage.js","Components/loginPage.js","Components/AdminControls.js","Components/HistoricalData.js","App.js","serviceWorker.js","index.js"],"names":["StockDataContext","createContext","StockDataContextProvider","props","useState","logedin","setlogedin","Loading","setLoading","recievedData","setrecievedData","recievedHistoricalData","setrecievedHistoricalData","historyDataRecieved","sethistoryDataRecieved","InvalidDetails","setInvalidDetails","RedirectTo","setRedirectTo","loggedout","setloggedout","getlistItems","setgetlistItems","getRecentData","stock_name","a","console","log","axios","get","res","data","getHistoryData","post","reverse","getlist","login","name","pass","sessionStorage","setItem","token","Provider","value","logout","removeItem","children","Navbar","useContext","useEffect","getItem","isOpen","setisOpen","color","style","padding","dark","expand","left","active","to","onClick","id","navbar","right","className","RecentUpdatesTable","tableRef","createRef","current","scrollIntoView","behavior","ref","striped","responsive","bordered","marginTop","fontWeight","textAlign","scrip","downs","ups","no_of_rises","no_of_falls","no_of_days_since_last_up","no_of_days_since_last_down","new_current_market_price","latest_change_indicator","pathname","ListItems","Date","startDate","endDate","scripname","charAt","toUpperCase","slice","toLowerCase","width","fontSize","borderBottom","getDetails","FirstPage","toggle","modal","setmodal","type","height","map","item","index","size","LoginPage","userName","setuserName","password","setpassword","onSubmit","e","preventDefault","placeholder","onChange","target","required","disabled","border","borderRadius","boxShadow","AdminControls","validAdmin","setvalidAdmin","success","setsuccess","sendReq","record","JSON","stringify","status","Alert","variant","Heading","onFileLoaded","trading_date","closing_price","inputStyle","display","flexDirection","justifyContent","path","component","href","HistoricalData","match","params","scripName","position","top","date","parseFloat","last_market_price","toFixed","last_low_range","last_upper_range","new_market_price","new_lower_range","new_upper_range","change_indicator","App","Fragment","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","backgroundColor","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9563919a.chunk.js","sourcesContent":["import React, { useState, setState, useEffect, createContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport{Route,Redirect} from 'react-router-dom'\r\n\r\nexport const StockDataContext = createContext();\r\nconst StockDataContextProvider = (props) => {\r\n    const [logedin, setlogedin] = useState(false)\r\n  const [Loading, setLoading] = useState(false);\r\n  const [recievedData, setrecievedData] = useState(null);\r\n  const [recievedHistoricalData, setrecievedHistoricalData] = useState(null);\r\n  const [historyDataRecieved, sethistoryDataRecieved] = useState(false);\r\n  const [InvalidDetails, setInvalidDetails] = useState(false)\r\nconst [RedirectTo, setRedirectTo] = useState(false)\r\nconst [loggedout, setloggedout] = useState(false)\r\nconst [getlistItems, setgetlistItems] = useState(null)\r\n  const stock_name = \"HDFCBANK\";\r\n//   get recent updated data\r\n  const getRecentData = async (stock_name) => {\r\n    setLoading(true);\r\n    console.log(\"inside e=recnt data\")\r\n    try {\r\n      const res = await axios.get(\r\n        \"http://localhost:8000/scripData/\" + stock_name + \"/\" \r\n      );\r\n      setrecievedData(res.data);\r\n      console.log(res.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n//   get entire historical data\r\n  const getHistoryData = async (stock_name) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:8000/historicalData/\" + stock_name + \"/\"\r\n      );\r\n     \r\n      setrecievedHistoricalData(res.data.reverse());\r\n      console.log(res.data);\r\n\r\n      setLoading(false);\r\n      sethistoryDataRecieved(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n  };\r\nconst getlist=async()=>{\r\n    setLoading(true)\r\n    try {\r\n        \r\n        const res = await axios.post(\r\n          \"http://localhost:8000/details/\"\r\n        );\r\n    //    const data = res.data.reverse()\r\n        setgetlistItems(res.data);\r\n        console.log(res.data);\r\n  \r\n        setLoading(false);\r\n      \r\n      } catch (err) {\r\n\r\n        console.log(err);\r\n      }\r\n  \r\n}\r\nconst login = async(name, pass)=>{\r\n    try{\r\n    const res = await axios.post(\r\n        \"http://localhost:8000/auth/\",{\r\n\r\n            \"username\":name,\r\n            \"password\":pass});\r\n\r\n      console.log(res)\r\n        sessionStorage.setItem('token', res.data.token);\r\n   if(res.data.token){\r\n       setlogedin(true)\r\n       setRedirectTo(true)\r\n   }\r\n       \r\n\r\n    }\r\n    \r\n    catch(err){\r\n        console.log(\"error\"+err)\r\n       \r\n        setInvalidDetails(true)\r\n    }\r\n    \r\n}\r\nconst logout= ()=>{\r\n    sessionStorage.removeItem('token')\r\n    setlogedin(false)\r\n    setloggedout(true)\r\n}\r\n  return (\r\n    <div>\r\n      <StockDataContext.Provider\r\n        value={{getlist, getlistItems, loggedout,logout,logedin, RedirectTo, login, getRecentData, recievedData, Loading, historyDataRecieved,recievedHistoricalData, getHistoryData,InvalidDetails }}\r\n      >\r\n        {props.children}\r\n      </StockDataContext.Provider>\r\n    </div>\r\n  );\r\n};\r\nexport default StockDataContextProvider;\r\n","import React,{useState, setState,useEffect, useContext} from 'react'\r\nimport {\r\n    MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBFormInline,\r\n    MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem\r\n    } from \"mdbreact\";\r\nimport {StockDataContext} from '../Contexts/stockDataContext'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n\r\n  const {logedin, logout, loggedout} = useContext(StockDataContext)\r\n  useEffect(() => {\r\n    \r\n  }, [sessionStorage.getItem('token')])\r\n   const [isOpen, setisOpen] = useState(false)\r\n      \r\n     const toggleCollapse = () => {\r\n        setisOpen( !isOpen );\r\n      }\r\n    return (\r\n  \r\n            <MDBNavbar color=\"black\"style={{padding:\"0px\"}} dark expand=\"md\">\r\n       \r\n        <MDBNavbarNav left>\r\n            <MDBNavItem active>\r\n              <MDBNavLink to=\"/\">Home</MDBNavLink>\r\n            </MDBNavItem>\r\n           \r\n            \r\n          </MDBNavbarNav>\r\n        <MDBNavbarToggler onClick={toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={isOpen} navbar>\r\n          \r\n          <MDBNavbarNav right>\r\n             {/* {logedin == true ? */}\r\n            <MDBNavItem>\r\n            <MDBNavLink className=\"white-text\" to=\"/login\">\r\n            \r\n             \r\n              Admin Login  </MDBNavLink></MDBNavItem>\r\n            {/* </MDBNavItem>:\r\n            <MDBNavItem><strong onClick={logout} className=\"white-text\">Logout</strong>\r\n            loggedout == true ? <Redirect to=\"/\" />:<div></div></MDBNavItem>\r\n            } */}\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n        \r\n    )\r\n}\r\nexport default Navbar","import React ,{useContext, useEffect, useRef, createRef} from 'react';\r\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBIcon } from 'mdbreact';\r\nimport {StockDataContext} from '../Contexts/stockDataContext'\r\nimport {Link} from 'react-router-dom';\r\nconst RecentUpdatesTable = ({name}) => {\r\n  const {recievedData, getRecentData}= useContext(StockDataContext)\r\n const tableRef = createRef()\r\nuseEffect(() => {\r\n \r\n  tableRef.current.scrollIntoView({ behavior: 'smooth' });\r\n})\r\n  return (\r\n  <div ref={tableRef}>\r\n   \r\n    <div className=\"recentUpdateTable\">\r\n    <MDBTable striped responsive bordered style={{ marginTop:\"20px\"}}>\r\n      <MDBTableHead>\r\n        <tr>\r\n        \r\n          <th style={{ fontWeight:\"500\",textAlign:\"center\"}}>Scrip Name</th>\r\n          <th style={{ fontWeight:\"500\",textAlign:\"center\"}}>No. of Back to Back downs</th>\r\n          <th style={{ fontWeight:\"500\",textAlign:\"center\"}}>No. of Back to Back ups</th>\r\n          <th style={{ fontWeight:\"500\",textAlign:\"center\"}}>No. of rises in a year</th>\r\n          <th style={{ fontWeight:\"500\",textAlign:\"center\"}}>No. of falls in a year</th>\r\n          <th style={{ fontWeight:\"500\",textAlign:\"center\"}}>\r\n            No. of days since last Up</th>\r\n            <th style={{ fontWeight:\"500\",textAlign:\"center\"}}>\r\n            No. of days since last Down</th>\r\n            <th style={{ fontWeight:\"500\",textAlign:\"center\"}}>\r\n            New Current Market Price</th>\r\n            <th style={{ fontWeight:\"500\",textAlign:\"center\"}}>\r\n            Latest Change Indicator</th>\r\n\r\n          <th style={{ fontWeight:\"500\",textAlign:\"center\"}}>View Historical Data</th>\r\n\r\n        </tr>\r\n      </MDBTableHead>\r\n      <MDBTableBody>\r\n        <tr>\r\n          <td style={{  color:\"black\",  fontWeight:\"400\", textAlign:\"center\"}}>{recievedData.scrip}</td>\r\n          <td style={{  color:\"black\",  fontWeight:\"400\", textAlign:\"center\"}}>{recievedData.downs}</td>\r\n          <td style={{  color:\"black\",  fontWeight:\"400\", textAlign:\"center\"}}>{recievedData.ups}</td>\r\n          <td style={{  color:\"black\",  fontWeight:\"400\", textAlign:\"center\"}}>{recievedData.no_of_rises}</td>\r\n          <td style={{  color:\"black\",  fontWeight:\"400\", textAlign:\"center\"}}>{recievedData.no_of_falls}</td>\r\n          <td style={{  color:\"black\",  fontWeight:\"400\", textAlign:\"center\"}}>{recievedData.no_of_days_since_last_up}</td>\r\n          <td style={{  color:\"black\",  fontWeight:\"400\", textAlign:\"center\"}}>{recievedData.no_of_days_since_last_down}</td>\r\n          <td style={{  color:\"black\",  fontWeight:\"400\", textAlign:\"center\"}}>{recievedData.new_current_market_price}</td>\r\n          <td style={{  color:\"black\",  fontWeight:\"400\", textAlign:\"center\"}}>{recievedData.latest_change_indicator}</td>\r\n\r\n          <td style={{  color:\"black\",  fontWeight:\"400\", textAlign:\"center\"}}>\r\n            <Link to={{pathname:`/history/${recievedData.scrip}`}}>Click Here\r\n            </Link></td>\r\n\r\n        </tr>\r\n        \r\n      </MDBTableBody>\r\n    </MDBTable>\r\n    </div></div>\r\n  );\r\n}\r\n\r\nexport default RecentUpdatesTable;","import React, { useState, useEffect, useContext } from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {StockDataContext} from '../Contexts/stockDataContext'\r\nimport{Route,Redirect,Link} from 'react-router-dom'\r\nimport RecentUpdatesTable from './recentUpdatesTable';\r\nimport {MDBContainer, MDBListGroup, MDBListGroupItem,MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\n// import RecentUpdatesTable from './recentUpdatesTable'\r\nconst ListItems = (props) => {\r\nconst{getRecentData, recievedData,Loading}= useContext(StockDataContext)\r\n   const [startDate, setstartDate] = useState(new Date())\r\n   const [endDate, setendDate] = useState(new Date())\r\n   const [redirect, setredirect] = useState(false)\r\n   const data = props.data\r\n   const key = props.id\r\n   const [modal, setmodal] = useState(false)\r\n const scripname =props.data.scrip.charAt(0).toUpperCase() + props.data.scrip.slice(1).toLowerCase();\r\n\r\n  \r\n const toggle = () => {\r\n    setmodal(true)\r\n    return(\r\n        <Redirect to=\"/\" />\r\n    )\r\n  }\r\n   useEffect(() => {\r\n      \r\n       console.log(props)\r\n     \r\n   }, [])\r\n  const handleStartChange=(date)=>{\r\n      setstartDate(date)\r\n      console.log(date)\r\n      const list = String(date).split(' ')\r\n     const formattedDate= list[2]+ \"-\"+list[1]+ \"-\"+list[3]\r\n      console.log(formattedDate)\r\n  }\r\n\r\n  const handleEndChange=(date)=>{\r\n    setendDate(date)\r\n    console.log(date)\r\n    const list = String(date).split(' ')\r\n   const formattedDate= list[2]+ \"-\"+list[1]+ \"-\"+list[3]\r\n    console.log(formattedDate)\r\n}\r\n    return (\r\n    \r\n        <MDBContainer>\r\n        <MDBListGroup style={{ width: \"100%\", marginTop:\"10px\" }}>\r\n          <MDBListGroupItem  className=\"eachListItem\">\r\n            <div className=\"d-flex w-100 justify-content-between\">\r\n           <div> <div style={{fontWeight:\"400\"}} className=\"mb-1\"><b>Scrip:</b> {scripname}</div> <span>  \r\n           <h6><b></b></h6></span></div>\r\n           <div  className=\"mb-1\"\r\n                  style={{ \r\n                  color:\" rgb(12, 1, 41)\",\r\n                  fontSize:\"15px\",\r\n                  fontWeight:\"400\", borderBottom:\" 0.5px solid rgb(204, 204, 204)\", padding:\"2px\", marginTop:\"0px\"\r\n                   }}\r\n                    id={props.id}\r\n                  onClick={()=>props.getDetails(props.data.scrip,startDate, endDate)} ><b>View Details</b>\r\n                  </div>\r\n            </div>\r\n          \r\n            <div style={{fontWeight:\"400\", fontSize:\"15x\", marginTop:\"10px\"}}>Range: 5%</div> \r\n          </MDBListGroupItem>\r\n          </MDBListGroup>\r\n          </MDBContainer>\r\n       \r\n    )\r\n}\r\nexport default ListItems;","import React ,{useState,setState, useContext, useEffect} from \"react\";\r\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Loader from 'react-loader-spinner'\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter , MDBRow, MDBCol} from 'mdbreact';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport ListItems from './listItems'\r\nimport {StockDataContext} from '../Contexts/stockDataContext'\r\nimport RecentUpdatesTable from \"./recentUpdatesTable\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nconst FirstPage = () => {\r\n    const {getRecentData, Loading, recievedData,getlist, getlistItems}= useContext(StockDataContext)\r\n    const [val, setval] = useState(null)\r\n    // const onClick=(e)=>{\r\n    //     setval(e)\r\n    //     getRecentData(e)\r\n    //     console.log(val)\r\n    // }\r\n   useEffect(() => {\r\n    \r\n     getlist()\r\n   }, [])\r\n   const getDetails=(scrip, startDate, endDate)=>{\r\n     toggle()\r\n    getRecentData(scrip, startDate, endDate)\r\n    \r\n   \r\n    }\r\n    const [modal, setmodal] = useState(false)\r\n  \r\n    const toggle = () => {\r\n       setmodal(!modal)\r\n      getlist()\r\n     }\r\n    \r\n  return (\r\n    <div>\r\n{\r\n  Loading == true || getlistItems == null ? <div  style={{\r\n      width:\"100%\", textAlign: \"center\", marginTop:\"30px\"}}>  <Loader\r\n    type=\"TailSpin\"\r\n    color=\"rgb(12, 1, 41)\"\r\n    height={80}\r\n    width={80}\r\n    \r\n    \r\n    />\r\n    <h6 style={{\r\n      width:\"100%\", textAlign: \"center\", color: \"blue\",marginTop:\"30px\"\r\n    }}><i> Loading</i></h6>\r\n    </div>:\r\n   \r\n   \r\n   <div className=\"frontPageContent\">\r\n    \r\n    <h4 className=\"frontPagetitle  \">Scrip Details</h4>\r\n  \r\n<div  className=\"page\">\r\n    \r\n  {  getlistItems.map((item, index)=>\r\n    <div  >\r\n    \r\n  \r\n             \r\n    <ListItems  modal={modal} getDetails={getDetails} id={index} data={item}/></div>)}</div>\r\n    \r\n    </div>\r\n}\r\n{recievedData  != null ?\r\n <MDBContainer>\r\n                  \r\n <MDBModal size=\"fluid m-4\" isOpen={modal} toggle={toggle}>\r\n   <MDBModalHeader toggle={toggle}>Scrip Details</MDBModalHeader>\r\n   \r\n   <MDBModalBody>\r\n  \r\n   <RecentUpdatesTable />\r\n   </MDBModalBody>\r\n   <MDBModalFooter>\r\n     <MDBBtn size=\"sm\" color=\"black\" onClick={toggle}>Close</MDBBtn>\r\n    \r\n   </MDBModalFooter>\r\n </MDBModal>\r\n</MDBContainer>\r\n:<div>\r\n  </div>}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default FirstPage;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\nimport {StockDataContext} from '../Contexts/stockDataContext'\r\nimport { Redirect } from \"react-router-dom\";\r\nconst LoginPage = () => {\r\n    const {login,InvalidDetails, RedirectTo} = useContext(StockDataContext)\r\n    const [userName, setuserName] = useState(\"\")\r\n    const [password, setpassword] = useState(\"\")\r\n   \r\n    const nameChange=(e)=>{\r\n        setuserName(e.target.value)\r\n    }\r\n    const passwordChange=(e)=>{\r\n        setpassword(e.target.value)\r\n\r\n    }\r\n    const onSubmit= async(e)=>{\r\n        e.preventDefault()\r\n       console.log(userName)\r\n       console.log(password)\r\n     \r\n await login(userName, password)\r\n\r\n    \r\n    }\r\n\r\nreturn (\r\n    <div>\r\n      {RedirectTo == true ? <Redirect to='/admin' /> :\r\n    <div className=\"loginForm\">\r\n    \r\n<div className=\"loginItems \">\r\n<p className=\"loginTitle pb-2 pt-2\">Admin Login</p>\r\n  {/* <MDBRow>\r\n    <MDBCol md=\"6\"> */} \r\n      <form className=\"pl-4 pr-4\">\r\n       \r\n      \r\n        <input placeholder=\"Username\" value={userName} onChange={nameChange} type=\"text\" id=\"username\"  className=\"form-control mt-4\" required/>\r\n       {userName == \"\"? <p style={{color:\"red\", fontSize:\"13px\", padding:\"5px\"}}>Enter Username</p>: <p></p>}\r\n        <br />\r\n       \r\n        <input placeholder=\"Password\" onChange={passwordChange} value={password} type=\"password\" id=\"password\"  className=\"form-control \" required/>\r\n       {password == \"\"? <p style={{color:\"red\", fontSize:\"13px\", padding:\"5px\"}}>Enter Password</p>: <p></p>}\r\n        { InvalidDetails == true ?\r\n        <div className=\"text-center mt-5 mb-5\"><h6><i style={{color:\"red\",}}>Invalid Details</i></h6></div>:<div></div>}\r\n        <div className=\"text-center  mb-3\">\r\n          <button disabled={userName == \"\" || password == \"\"} type=\"submit\" onClick={onSubmit} style={{border:\"2px solid rgb(12, 1, 41)\", \r\n          width:\"30%\", borderRadius:\"25px\", color:\"black\",boxShadow:\"2px 2px 4px grey\", padding:\"5px\"}} type=\"submit\">Login</button>\r\n        </div>\r\n      </form>\r\n    {/* </MDBCol>\r\n  </MDBRow> */}\r\n</div>\r\n</div>}</div>\r\n);\r\n};\r\n\r\nexport default LoginPage;","import React,{useState,useEffect, Children} from 'react'\r\nimport CSVReader from 'react-csv-reader'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport axios from'axios'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport LoginPage from './loginPage'\r\nconst AdminControls = () => {\r\n const [validAdmin, setvalidAdmin] = useState(false)\r\n  const [success, setsuccess] = useState(null)\r\n  const logout=()=>{\r\n    sessionStorage.removeItem('token')\r\n    return(<Route path=\"/login\" component={LoginPage} />)\r\n  }\r\n  useEffect(() => {\r\n   sessionStorage.getItem('token') ? setvalidAdmin(true): setvalidAdmin(false)\r\n   } ,  [])\r\n    const sendReq=async(record)=>{\r\n      try{\r\n        console.log(\"req sent\")\r\n      const res = await axios.post(\"http://localhost:8000/updatedData/\",JSON.stringify(record))\r\n      console.log(res)\r\nif( res.status==\"200\" || res.status==\"201\"){ setsuccess(true)}\r\nelse{setsuccess(false)}\r\n    }\r\n      catch(err){\r\n        console.log(err)\r\n        \r\n      }\r\n    }\r\n    const onChange=(data)=>{\r\n      \r\n data.map((item, index)=>\r\n {\r\n \r\n     if(index!=0){\r\n      //  if(item[0] ==='ABB'){\r\n      let record={\r\n          stock_name: item[0],\r\n          trading_date: item[10],\r\n          closing_price: item[5]\r\n        }\r\n      sendReq(record)\r\n\r\n   \r\n     }\r\n })\r\n\r\n    }\r\n\r\n        \r\n    \r\n    const papaparseOptions = {\r\n        header: true,\r\n        dynamicTyping: true,\r\n        skipEmptyLines: true,\r\n        transformHeader: header =>\r\n          header\r\n            .toLowerCase()\r\n            .replace(/\\W/g, '_')\r\n      }\r\n    return (\r\n        <div>\r\n{ validAdmin == true ?\r\n          <div>\r\n          {success == true ? \r\n          <Alert variant=\"success\">\r\n  <Alert.Heading>Update Done</Alert.Heading>\r\n</Alert>:<h1></h1>}\r\n{success == false ? \r\n          <Alert variant=\"warning\">\r\n  <Alert.Heading>Updatefailed</Alert.Heading>\r\n</Alert>:<h1></h1>}\r\n<div className=\"adminContent\">\r\n\r\n\r\n<div className=\"uploadFile\">\r\n            <p className=\"fileuploadTitle\"><u>Upload Bhavcopy</u></p>\r\n        <CSVReader onFileLoaded={(data) => onChange(data)}\r\n       inputStyle={{textAlign:\"center\", padding:\"20px\"}}\r\n         /> \r\n      </div>\r\n      </div>\r\n      <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"center\", width:\"100%\", marginTop:\"30px\", }}>\r\n      <button style={{border:\"1px solid rgb(12, 1, 41)\", padding:\"3px\"}} onClick={logout}><a style={{color:\"black\"}} href=\"/login\">Logout</a></button> \r\n      </div> </div>\r\n      :\r\n       <div>\r\n         <h4 style={{marginTop:\"30px\", color:\"red\", width:\"100%\", textAlign:\"center\"}}>Access Restricted ! </h4>\r\n         </div>\r\n         }\r\n\r\n      </div>\r\n    )\r\n}\r\nexport default AdminControls;\r\n","import React,{useContext, useEffect} from 'react'\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport {StockDataContext} from '../Contexts/stockDataContext'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nconst HistoricalData = (props) => {\r\n    const {recievedHistoricalData, Loading, getHistoryData}= useContext(StockDataContext)\r\n    console.log(props)\r\nuseEffect(() => {\r\n    console.log(props.match.params.scripName)\r\n    getHistoryData(props.match.params.scripName)\r\n}, [props.match.params.scripName])\r\n\r\n  return (\r\n \r\n      <div>\r\n <h5\r\n    className=\"tableTitle mt-10\">Historical Prices of the Scrip</h5>\r\n     <div className=\"recentUpdateTable\">      {\r\n          Loading == true || recievedHistoricalData == null ?\r\n          <div  style={{\r\n            width:\"100%\", textAlign: \"center\", marginTop:\"30px\"}}>  <Loader\r\n          type=\"TailSpin\"\r\n          color=\"rgb(12, 1, 41)\"\r\n          height={80}\r\n          width={80}\r\n          />\r\n          <h6 style={{\r\n            width:\"100%\", textAlign: \"center\", color: \"blue\",marginTop:\"30px\"\r\n          }}><i> Loading</i></h6>\r\n          </div>\r\n:\r\n <div>     \r\n  \r\n    <MDBTable responsive striped bordered style={{ marginTop:\"10px\", padding:\"2px\"}}>\r\n      <MDBTableHead style={{position:\"sticky\", top:\"0\"}}>\r\n        <tr>\r\n        \r\n          <th style={{fontSize:\"15px\", padding:\"10px\", fontWeight:\"500\", textAlign:\"center\"}} >Scrip Name</th>\r\n          <th style={{fontSize:\"15px\", padding:\"10px\", fontWeight:\"500\", textAlign:\"center\"}} >Recent Update Date</th>\r\n          <th style={{fontSize:\"15px\", padding:\"10px\", fontWeight:\"500\", textAlign:\"center\"}} >Last Market Price</th>\r\n          <th style={{fontSize:\"15px\", padding:\"10px\", fontWeight:\"500\", textAlign:\"center\"}} >Last lower Price Circuit</th>\r\n          <th style={{fontSize:\"15px\", padding:\"10px\", fontWeight:\"500\", textAlign:\"center\"}} >Last upper Price Circuit</th>\r\n          <th style={{fontSize:\"15px\", padding:\"10px\", fontWeight:\"500\", textAlign:\"center\"}} >NEW Market Price</th>\r\n          <th style={{fontSize:\"15px\", padding:\"10px\", fontWeight:\"500\", textAlign:\"center\"}} >NEW lower Price Circuit</th>\r\n          <th style={{fontSize:\"15px\", padding:\"10px\", fontWeight:\"500\", textAlign:\"center\"}} >NEW upper Price Circuit</th>\r\n          <th style={{fontSize:\"15px\", padding:\"10px\", fontWeight:\"500\", textAlign:\"center\"}} >Indicator</th>\r\n          \r\n\r\n        </tr>\r\n      </MDBTableHead>\r\n      {recievedHistoricalData.map(item => {\r\n         \r\n      return(\r\n       <MDBTableBody style={{fontSize:\"5px\"}}>\r\n        <tr  >\r\n          <td style={{fontSize:\"14px\",  padding:\"10px\", fontWeight:\"400\", textAlign:\"center\"}} >{item.scrip}</td>\r\n          <td style={{fontSize:\"14px\",  padding:\"10px\", fontWeight:\"400\", textAlign:\"center\"}}>{item.date}</td>\r\n         \r\n          <td style={{fontSize:\"14px\",  padding:\"10px\", fontWeight:\"400\", textAlign:\"center\"}}>{ parseFloat(item.last_market_price).toFixed( 2 )}</td>\r\n          <td style={{fontSize:\"14px\",  padding:\"10px\", fontWeight:\"400\", textAlign:\"center\"}}>{parseFloat(item.last_low_range).toFixed( 2 )}</td>\r\n          <td style={{fontSize:\"14px\",  padding:\"10px\", fontWeight:\"400\", textAlign:\"center\"}}>{ parseFloat(item.last_upper_range).toFixed( 2 )}</td>\r\n          <td style={{fontSize:\"14px\",  padding:\"10px\", fontWeight:\"400\", textAlign:\"center\"}}>{parseFloat(item.new_market_price).toFixed( 2 )}</td>\r\n          <td style={{fontSize:\"14px\",  padding:\"10px\", fontWeight:\"400\", textAlign:\"center\"}}>{parseFloat(item.new_lower_range).toFixed( 2 )}</td>\r\n          <td style={{fontSize:\"14px\",  padding:\"10px\", fontWeight:\"400\", textAlign:\"center\"}}>{parseFloat(item.new_upper_range).toFixed( 2 )}</td>\r\n          <td style={{fontSize:\"14px\",  padding:\"10px\", fontWeight:\"400\", textAlign:\"center\"}}>{item.change_indicator}</td>\r\n          \r\n        </tr>\r\n        \r\n      </MDBTableBody> \r\n       ) })}\r\n    </MDBTable>\r\n    </div>\r\n}\r\n</div>\r\n</div>\r\n  )}\r\n export default HistoricalData","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./Components/navbar\";\nimport UpdateTable from \"./Components/recentUpdatesTable\";\nimport FirstPage from \"./Components/firstPage\";\nimport LoginPage from './Components/loginPage'\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport StockDataContextProvider from \"./Contexts/stockDataContext\";\nimport AdminControls from \"./Components/AdminControls\";\nimport HistoricalData from './Components/HistoricalData'\nimport RecentUpdatesTable from \"./Components/recentUpdatesTable\";\nfunction App() {\n  return (\n    <React.Fragment>\n      <StockDataContextProvider>\n        <Navbar />\n        <Switch>\n      \n          <Route path=\"/\" exact component={FirstPage} />\n          <Route path=\"/admin\" exact component={AdminControls} />\n          <Route path=\"/history/:scripName\" exact component={HistoricalData} />\n          <Route path=\"/login\" exact component={LoginPage} />\n          <Route path=\"/recentData\" exact component={RecentUpdatesTable} />\n          \n        </Switch>\n      </StockDataContextProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport'bootstrap-css-only/css/bootstrap.min.css'; \nimport'mdbreact/dist/css/mdb.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <Router>\n    <App  style={{backgroundColor:\" rgb(238, 237, 237)\"}}/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}